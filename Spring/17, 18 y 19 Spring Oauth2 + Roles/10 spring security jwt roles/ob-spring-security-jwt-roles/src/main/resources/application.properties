# Base de datos PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/springpostgrejwtroles
spring.datasource.username=postgres
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.show-sql=true
#spring.jpa.hibernate.ddl-auto=create tiene 4 posibles valores, create: borra y crea, create-drop: crea y borra, none: no creo las tablas, update: actualiza sin borrar nada , validate
# En produccion es normal tener update o no tener ninguna de esas y utilizar algun framework como liquibase o flyway  para hacer migraciones a las tablas (mas sotisficado)
spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
# server.port=8085
#spring.sql.init.mode=always  ejecuta data.sql, se ejecutara siempre que la base de datos no sea embebida, en este caso uso postgre por eso lo inserto

spring.sql.init.mode=embedded
spring.jpa.defer-datasource-initialization=true

# Seguridad JWT
jwt.token.validity=18000
jwt.signing.key=signingkey
jwt.authorities.key=roles
jwt.token.prefix=Bearer
jwt.header.string=Authorization

# Tratamiento de Errores, no muestra las excepciones en el front
#server.error.include-exception=false
#server.error.include-message=never
#server.error.include-stacktrace=never

spring.main.allow-circular-references=true

app.jwt.secret=openbopenbopenbopenbopenbopenbopenbopenbopenbopenbopenbop